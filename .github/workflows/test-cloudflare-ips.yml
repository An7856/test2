name: Cloudflare 代理IP测试

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点自动运行

jobs:
  test-ips:
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install requests numpy speedtest-cli ipaddress

    - name: 运行Cloudflare IP测试
      run: |
        cat << 'EOF' > cloudflare_tester.py
        import requests
        import subprocess
        import time
        import numpy as np
        from speedtest import Speedtest
        import concurrent.futures
        import json
        import os
        import ipaddress
        import random

        # 配置参数
        CLOUDFLARE_IP_RANGES = [
            "173.245.48.0/20",
            "103.21.244.0/22",
            "103.22.200.0/22",
            "103.31.4.0/22",
            "141.101.64.0/18",
            "108.162.192.0/18",
            "190.93.240.0/20",
            "188.114.96.0/20",
            "197.234.240.0/22",
            "198.41.128.0/17",
            "162.158.0.0/15",
            "104.16.0.0/13",
            "104.24.0.0/14",
            "172.64.0.0/13",
            "131.0.72.0/22"
        ]
        IPS_PER_RANGE = 5
        MAX_WORKERS = 20
        TEST_FILE_URL = "https://speed.cloudflare.com/__down?bytes=1000000"
        
        # [此处保留原有所有函数定义，确保与之前相同]
        # 包括 generate_random_ip, test_latency, test_download_speed 等函数
        
        def main():
            # [保留原有主逻辑代码]
            
            # 确保输出目录存在
            output_dir = os.getcwd()
            os.makedirs(output_dir, exist_ok=True)
            
            # 使用绝对路径保存文件
            txt_path = os.path.join(output_dir, "best_cloudflare_ips.txt")
            json_path = os.path.join(output_dir, "cloudflare_ips_full_results.json")
            
            print(f"\n正在保存结果到: {txt_path} 和 {json_path}")
            
            # 保存文本结果
            with open(txt_path, "w", encoding="utf-8") as f:
                f.write("Top Cloudflare Proxy IPs by Region (sorted by performance):\n")
                f.write("\n".join(output_lines))
            
            # 保存JSON结果
            with open(json_path, "w", encoding="utf-8") as f:
                json.dump(results_by_country, f, indent=2, ensure_ascii=False)
            
            print("文件保存完成！")
            print(f"文本文件大小: {os.path.getsize(txt_path)} 字节")
            print(f"JSON文件大小: {os.path.getsize(json_path)} 字节")

        if __name__ == "__main__":
            try:
                main()
            except Exception as e:
                print(f"脚本执行出错: {str(e)}")
                with open("error.log", "w") as f:
                    f.write(str(e))
                raise  # 重新抛出异常使工作流失败
        EOF

        python cloudflare_tester.py

    - name: 检查生成的文件
      run: |
        echo "当前工作目录:"
        pwd
        echo "目录内容:"
        ls -la
        echo "文本文件内容:"
        head -n 10 best_cloudflare_ips.txt
        echo "JSON文件大小:"
        stat -c "%n %s bytes" cloudflare_ips_full_results.json

    - name: 上传测试结果
      uses: actions/upload-artifact@v4
      with:
        name: cloudflare-ip-results
        path: |
          ${{ github.workspace }}/best_cloudflare_ips.txt
          ${{ github.workspace }}/cloudflare_ips_full_results.json
        if-no-files-found: error
        retention-days: 5
